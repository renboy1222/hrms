/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.aldrin.hrms.gui.dialog.au;

import com.aldrin.hrms.dao.impl.DurationDAOImpl;
import com.aldrin.hrms.dao.impl.RoomDAOImpl;
import com.aldrin.hrms.dao.impl.RoomRateDAOImpl;
import com.aldrin.hrms.dao.impl.RoomStatusDAOImpl;
import com.aldrin.hrms.gui.JFrameHRMS;
import com.aldrin.hrms.model.Duration;
import com.aldrin.hrms.model.Room;
import com.aldrin.hrms.model.RoomRate;
import com.aldrin.hrms.util.ComboBoxList;
import com.aldrin.hrms.util.NumberInput;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author ALDRIN B. C.
 */
public class JDialogRoomRateAU extends javax.swing.JDialog {

    /**
     * Creates new form JDialogCustomerAU
     */
    private JFrameHRMS jFrameHRMS;
    private RoomRate roomRate = new RoomRate();
    static String title;
    private RoomRateDAOImpl roomRateDAOImpl = new RoomRateDAOImpl();
    private Duration duration = new Duration();
    private DurationDAOImpl durationDAOImpl = new DurationDAOImpl();

    public JDialogRoomRateAU(JFrameHRMS jFrameHRMS, boolean modal) {
        super(jFrameHRMS, modal);
        initComponents();
        setTitle("Add");
        this.title = "Add";
        jButton1.setIcon(new FlatSVGIcon("svg/save.svg", 24, 24));
        jTextFieldPrice.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "PRICE");
        jTextFieldDownpayment.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "DOWNPAYMENT");
        jTextFieldRefundable.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "REFUNDABLE");
        new NumberInput().doubleValidator(jTextFieldDownpayment);
        comboBoxRoom();
        comboBoxDuration();

    }

    public JDialogRoomRateAU(JFrameHRMS jFrameCafSys, boolean modal, RoomRate roomRate, String title) {
        super(jFrameCafSys, modal);
        initComponents();
        setTitle(title);
        this.title = title;
        this.roomRate = roomRate;
        jButton1.setIcon(new FlatSVGIcon("svg/edit.svg", 24, 24));
        jButton1.setText(title);
        jTextFieldPrice.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "PRICE");
        jTextFieldPrice.setText(String.valueOf(roomRate.getPrice()));
        jTextFieldDownpayment.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "DOWNPAYMENT");
        jTextFieldDownpayment.setText(String.valueOf(roomRate.getDown_payment()));
        jTextFieldRefundable.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "REFUNDABLE");
        jTextFieldRefundable.setText(String.valueOf(roomRate.getRefundable()));
        comboBoxRoom();
        for (ComboBoxList a : this.roomDAOImpl.getList()) {
            a.setSelectedId(roomDAOImpl.getList(), String.valueOf(roomRate.getRoom().getId()), jComboBoxDuration);
        }
        comboBoxDuration();
        for (ComboBoxList a : this.durationDAOImpl.getList()) {
            a.setSelectedId(durationDAOImpl.getList(), String.valueOf(roomRate.getDuration().getId()), jComboBoxRoomNumber);
        }

    }

    public JDialogRoomRateAU(JFrameHRMS jFrameHRMS, boolean modal, String title, RoomRate roomRate) {
        super(jFrameHRMS, modal);
        initComponents();
        setTitle(title);
        this.roomRate = roomRate;
        this.title = title;
        jButton1.setIcon(new FlatSVGIcon("svg/delete.svg", 24, 24));
        jButton1.setText(title);
        jTextFieldPrice.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "PRICE");
        jTextFieldPrice.setText(String.valueOf(roomRate.getPrice()));
        jTextFieldDownpayment.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "DOWNPAYMENT");
        jTextFieldDownpayment.setText(String.valueOf(roomRate.getDown_payment()));
        jTextFieldRefundable.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "REFUNDABLE");
        jTextFieldRefundable.setText(String.valueOf(roomRate.getRefundable()));
        comboBoxRoom();
        for (ComboBoxList a : this.roomRateDAOImpl.getList()) {
            a.setSelectedId(roomRateDAOImpl.getList(), String.valueOf(roomRate.getRoom().getId()), jComboBoxDuration);
        }
        comboBoxDuration();
        for (ComboBoxList a : this.durationDAOImpl.getList()) {
            a.setSelectedId(durationDAOImpl.getList(), String.valueOf(roomRate.getId()), jComboBoxRoomNumber);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldDownpayment = new javax.swing.JTextField();
        jComboBoxDuration = new javax.swing.JComboBox<>();
        jComboBoxRoomNumber = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldRefundable = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("ROOM NUMBER:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 20, 110, 30));

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 160, 30));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("PRICE:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 60, 110, 30));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("DOWNPAYMENT:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 100, 110, 30));
        getContentPane().add(jTextFieldDownpayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 220, 30));

        getContentPane().add(jComboBoxDuration, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 220, 30));

        getContentPane().add(jComboBoxRoomNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 220, 30));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("REFUNDABLE:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 30));
        getContentPane().add(jTextFieldPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 220, 30));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("DURATION:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 110, 30));
        getContentPane().add(jTextFieldRefundable, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 220, 30));

        setSize(new java.awt.Dimension(372, 368));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.title.equals("Add")) {
            int response = JOptionPane.showConfirmDialog(jFrameHRMS, "Are you sure to save  ?", "Save confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                this.roomRate.setId(null);
                this.roomRate.setPrice(Float.parseFloat(jTextFieldPrice.getText()));
                this.roomRate.setDown_payment(Float.parseFloat(jTextFieldDownpayment.getText()));
                this.roomRate.setRefundable(Float.parseFloat(jTextFieldRefundable.getText()));
                ComboBoxList roomId = (ComboBoxList) this.jComboBoxRoomNumber.getSelectedItem();
                Room ro = new Room();
                ro.setId(roomId.getId());
                this.roomRate.setRoom(ro);
                ComboBoxList durationId = (ComboBoxList) this.jComboBoxDuration.getSelectedItem();
                Duration du = new Duration();
                du.setId(durationId.getId());
                this.roomRate.setDuration(du);
                roomRateDAOImpl.addRoomRate(roomRate);
                this.dispose();
            }
        } else if (this.title.equals("Update")) {
            int response = JOptionPane.showConfirmDialog(jFrameHRMS, "Are you sure to update  ?", "Save confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                this.roomRate.setPrice(Float.parseFloat(jTextFieldPrice.getText()));
                this.roomRate.setDown_payment(Float.parseFloat(jTextFieldDownpayment.getText()));
                this.roomRate.setRefundable(Float.parseFloat(jTextFieldRefundable.getText()));
                ComboBoxList roomId = (ComboBoxList) this.jComboBoxRoomNumber.getSelectedItem();
                Room ro = new Room();
                ro.setId(roomId.getId());
                this.roomRate.setRoom(ro);
                ComboBoxList durationId = (ComboBoxList) this.jComboBoxDuration.getSelectedItem();
                Duration du = new Duration();
                du.setId(durationId.getId());
                this.roomRate.setDuration(du);
                roomRateDAOImpl.updateRoomRate(roomRate);
                this.dispose();
            }
        } else if (this.title.equals("Delete")) {
            int response = JOptionPane.showConfirmDialog(jFrameHRMS, "Are you sure to delete  ?", "Save confirmation", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                roomRateDAOImpl.deleteRoomRate(roomRate);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Object> jComboBoxDuration;
    private javax.swing.JComboBox<Object> jComboBoxRoomNumber;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextFieldDownpayment;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldRefundable;
    // End of variables declaration//GEN-END:variables

    private RoomStatusDAOImpl roomStatusDAOImpl = new RoomStatusDAOImpl();
    private RoomDAOImpl roomDAOImpl = new RoomDAOImpl();

    private void comboBoxRoom() {
        roomDAOImpl.comboBoxRoom();
        jComboBoxRoomNumber.removeAllItems();
        for (ComboBoxList a : roomDAOImpl.getList()) {
            this.jComboBoxRoomNumber.addItem(a);
        }
    }

    private void comboBoxDuration() {
        durationDAOImpl.comboBoxDuration();
        jComboBoxDuration.removeAllItems();
        for (ComboBoxList a : durationDAOImpl.getList()) {
            this.jComboBoxDuration.addItem(a);
        }
    }

}
